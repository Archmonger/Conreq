# Generated by Django 3.2.6 on 2021-08-24 07:54

from django.db import migrations, models
import django.db.models.deletion
import jsonfield.fields
import multiselectfield.db.fields
import uuid
import versionfield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Subcategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=100)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_store.category')),
            ],
        ),
        migrations.CreateModel(
            name='App',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('development_stage', models.CharField(choices=[('PREALPHA', 'Pre-Alpha'), ('ALPHA', 'Alpha'), ('BETA', 'Beta'), ('STABLE', 'Stable'), ('DEPRECATED', 'Deprecated'), ('OBSOLETE', 'Obsolete')], max_length=20)),
                ('version', versionfield.fields.VersionField()),
                ('screenshots', jsonfield.fields.JSONField()),
                ('notice_message', models.TextField()),
                ('author', models.CharField(max_length=50)),
                ('repository_url', models.URLField()),
                ('homepage_url', models.URLField()),
                ('support_url', models.URLField()),
                ('donation_url', models.URLField()),
                ('environment_variables', jsonfield.fields.JSONField()),
                ('sys_platforms', multiselectfield.db.fields.MultiSelectField(max_length=10, verbose_name=[('ANY', 'any'), ('AIX', 'aix'), ('LINUX', 'linux'), ('WINDOWS', 'Windows'), ('CYGWIN', 'cygwin'), ('MACOS', 'darwin')])),
                ('touch_compatible', models.BooleanField()),
                ('mobile_compatible', models.BooleanField()),
                ('minimum_conreq_version', versionfield.fields.VersionField()),
                ('tested_conreq_version', versionfield.fields.VersionField()),
                ('max_conreq_version', versionfield.fields.VersionField(blank=True, null=True)),
                ('asynchronous', models.CharField(choices=[('NONE', 'No Async'), ('SEMI', 'Semi Async'), ('FULL', 'Fully Async')], max_length=20)),
                ('incompatible_apps', models.ManyToManyField(blank=True, related_name='_app_store_app_incompatible_apps_+', to='app_store.App')),
                ('incompatible_categories', models.ManyToManyField(blank=True, related_name='incompatible_categories', to='app_store.Category')),
                ('incompatible_subcategories', models.ManyToManyField(blank=True, related_name='incompatible_subcategories', to='app_store.Subcategory')),
                ('optional_apps', models.ManyToManyField(blank=True, related_name='_app_store_app_optional_apps_+', to='app_store.App')),
                ('required_apps', models.ManyToManyField(blank=True, related_name='_app_store_app_required_apps_+', to='app_store.App')),
                ('subcategories', models.ManyToManyField(to='app_store.Subcategory')),
            ],
        ),
    ]
